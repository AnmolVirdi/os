package:
  name: chart-testing
  version: "3.12.0"
  epoch: 0
  description: Tool for testing Helm charts, used for linting and testing pull requests.
  copyright:
    - license: Apache-2.0

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/helm/chart-testing
      tag: v${{package.version}}
      expected-commit: d6991035017d7ac0e3dec3d1b5ad2e5f18674b32

  - uses: go/build
    with:
      modroot: .
      packages: ./ct
      output: ct
      ldflags: "-X github.com/helm/chart-testing/v3/ct/cmd.Version=${{package.version}} -X github.com/helm/chart-testing/v3/ct/cmd.BuildDate=$(date -u +%Y-%m-%dT%H:%M:%SZ) -X github.com/helm/chart-testing/v3/ct/cmd.GitCommit=$(git rev-parse --short HEAD)"

update:
  enabled: true
  github:
    identifier: helm/chart-testing
    strip-prefix: v

test:
  environment:
    contents:
      packages:
        - helm
        - git
        - yamllint
  pipeline:
    - name: "Version and help test"
      runs: |
        ct version 2>&1 | grep ${{package.version}}
        ct --help > help_output.txt 2>&1
        grep -q "Lint and test" help_output.txt
    - name: "Completion command test"
      runs: |
        ct completion bash > bash_completion.sh 2>&1
        grep -q "bash completion V2 for ct" bash_completion.sh
    - name: "Ct lint test"
      runs: |
        # Using grafana helm chart
        git clone --depth=1 https://github.com/grafana/helm-charts.git
        cd helm-charts
        git checkout caca81a241a207cc6dc0e84c3ab51f76bd800028
        # Init git (required by ct)
        git init
        git config user.email "test@example.com"
        git config user.name "Test User"
        echo "# test change" >> charts/grafana/Chart.yaml
        sed -i 's/8.11.2/8.11.3/' charts/grafana/Chart.yaml
        git add .
        git commit -m "Trigger chart change"
        # ct config file
        cat > ct-config.yaml <<EOF
        chart-dirs:
          - charts
        chart-repos:
          - "grafana=https://grafana.github.io/helm-charts"
        target-branch: HEAD
        validate-chart-schema: false
        helm-extra-args: --dry-run
        EOF
        # Helm lint config
        cat > lintconf.yaml <<EOF
        strict: true
        EOF
        # Run ct lint
        ct lint --config ct-config.yaml > lint_output.txt 2>&1
        grep -q "All charts linted successfully" lint_output.txt
        # Ct lint error case, injecting errors:
        echo "bad: [unclosed" >> charts/grafana/values.yaml
        echo "# test change2" >> charts/grafana/Chart.yaml
        sed -i 's/8.11.3/8.11.4/' charts/grafana/Chart.yaml
        ct lint --config ct-config.yaml > lint_output.txt 2>&1 || true
        grep -q "failed linting charts" lint_output.txt
    - name: "Ct install test"
      runs: |
        cd helm-charts
        sed -i '$d' charts/grafana/values.yaml
        sed -i '$d' charts/grafana/values.yaml
        # Install (dry-run mode)
        ct install --config ct-config.yaml --helm-extra-args '--dry-run --debug' > install_output.txt 2>&1 || true
        # Check that the install was attempted
        grep -q "Installing chart" install_output.txt
        # Note: Install chart deployment would fail because of unavailability of k8s cluster, but attempt was made, which comes under scope of ct's functionality
    - name: "Ct lint-install test"
      runs: |
        cd helm-charts
        ct lint-and-install --config ct-config.yaml --helm-extra-args='--dry-run --debug' > lint_install_output.txt 2>&1 || true
        grep -q "Linting charts/grafana" lint_install_output.txt
        grep -q "Installing chart with values" lint_install_output.txt
    - name: "Ct list-changed test"
      runs: |
        cd helm-charts
        ct list-changed --target-branch main > changed.txt 2>&1
        grep -q "grafana" changed.txt
        yamale --version