package:
  name: nats-top
  version: "0.6.3"
  epoch: 0
  description: A top-like tool for monitoring NATS servers.
  copyright:
    - license: MIT

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/nats-io/nats-top
      tag: v${{package.version}}
      expected-commit: 812d35cc991232d7606816a15b2ea0b12fb129e7

  - uses: go/build
    with:
      packages: .
      output: nats-top
      ldflags: -X main.version=${{package.version}} -X main.commit=$(git rev-parse HEAD) -X main.date=$(date -u +"%Y-%m-%dT%H:%M:%SZ")

subpackages:
  - name: ${{package.name}}-compat
    description: Compat package for ${{package.name}}
    pipeline:
      - runs: |
          mkdir -p "${{targets.contextdir}}"/usr/local/bin
          ln -s /usr/bin/nats-top "${{targets.contextdir}}"/usr/local/bin/nats-top

update:
  enabled: true
  github:
    identifier: nats-io/nats-top
    strip-prefix: v

test:
  environment:
    contents:
      packages:
        - bash
        - nats-server
        - nats
        - openssl
  pipeline:
    - name: "Version test"
      runs: |
        nats-top --version 2>&1 | grep ${{package.version}}
    - name: Test nats-top with minimal nats server and 2 clients
      runs: |
        nats-server -p 4222 -m 8222 & sleep 2 &
        nats sub client1 > /dev/null & sleep 2 & nats sub client2 > /dev/null & sleep 1
        nats-top -s localhost -b -u -o nats-output-${{package.version}}.txt
        cat nats-output-${{package.version}}.txt
    - name: test connection limit (-n)
      runs: |
        nats-top -n 2 -o nats-output-${{package.version}}.txt
        grep "Connections Polled:" nats-output-${{package.version}}.txt
    - name: test sorting options (-sort)
      runs: |
        nats-top -sort uptime -o nats-output-${{package.version}}.txt
        tail -n 5 nats-output-${{package.version}}.txt
    - name: test setting refresh delay (-d)
      runs: |
        nats-top -d 2 & sleep 2
    - name: test limiting refresh count (-r)
      runs: |
        nats-top -r 2 & sleep 4
    - name: test output with delimiter (-l)
      runs: |
        nats-top -o nats-output-${{package.version}}.csv -l ","
        head -n 5 nats-output-${{package.version}}.csv
    - name: Test Nats-top in TLS mode
      runs: |
        mkdir -p /tmp/certs
        cd /tmp/certs
        # Generate CA certificate
        openssl genrsa -out ca-key.pem 2048
        openssl req -new -x509 -key ca-key.pem -out ca-cert.pem -days 365 -subj "/CN=NATS-CA"
        # Generate Server Certificate
        openssl genrsa -out server-key.pem 2048
        openssl req -new -key server-key.pem -out server-csr.pem -subj "/CN=localhost"
        openssl x509 -req -in server-csr.pem -CA ca-cert.pem -CAkey ca-key.pem -CAcreateserial -out server-cert.pem -days 365
        # Generate Client Certificate
        openssl genrsa -out client-key.pem 2048
        openssl req -new -key client-key.pem -out client-csr.pem -subj "/CN=NATS-Client"
        openssl x509 -req -in client-csr.pem -CA ca-cert.pem -CAkey ca-key.pem -CAcreateserial -out client-cert.pem -days 365
        cd ../..
        pkill nats-server & sleep 2
        nats-server -p 4222 -m 8222 --tls --tlscert ./tmp/certs/server-cert.pem --tlskey ./tmp/certs/server-key.pem --tlscacert ./tmp/certs/ca-cert.pem & sleep 2
        nats-top -s localhost -cert ./tmp/certs/client-cert.pem -key ./tmp/certs/client-key.pem -cacert ./tmp/certs/ca-cert.pem -o nats-output-${{package.version}}.txt
        cat nats-output-${{package.version}}.txt
